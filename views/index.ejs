<html>

<%- include("./partials/head.ejs") %>

  <body>
    <%- include("./partials/nav.ejs") %>
      <div class="chat-content">
        <div class="chatHistory">
          <button class="toggle-chat-button">
            <img src="arrow-down.svg" alt="history">
          </button>
          <% if (chatHistory.length> 0) { %>
            <% let hasDisplayedLabel=false; %>
              <% chatHistory.reverse().forEach(entry=> { %>
                <% if (!hasDisplayedLabel && entry.sessionID.toString()===curSession.toString()) { %>
                  <div class="history-label">
                    <span class="label-text">
                      <%= entry.subject %> - <%= entry.topic %>
                    </span><br>
                    <button class="delete-button" dataSessionId="<%= entry.sessionID %>">
                      <img id="deleteButton" src="delete-icon.svg" alt="Delete">
                      <img id="okButton" src="ok-icon.svg" alt="OK" style="display: none;">
                    </button>
                  </div>
                  <% hasDisplayedLabel=true; %>
                    <% } else { %>
                      <div class="historyButton">
                        <button class="session-button" dataSessionId="<%= entry.sessionID %>">
                          <span class="history-date">
                            <%= entry.createdAt.toLocaleDateString() %>
                          </span><br>
                          <%= entry.subject %> - <%= entry.topic %>
                        </button>
                      </div>
                      <% } %>
                        <% }); %>
                          <% } %>
        </div>
        <div class="chatContainer">
          <form class="subject-topic-input" action="/chat" method="POST" id="topicForm">
            <select id="subject" name="subject" <% if (subject !=='' ) { %>disabled<% } %> required>
                <% if (language==='en' ) { %>
                  <option value="<%= subject %>" <% if (subject !=='' ) { %>selected<% } %>><%= subject !=='' ? subject
                        : 'Subject' %>
                        <img src=".\arrow-down.svg">
                  </option>
                  <option value="Biology" disabled>Biology</option>
                  <option value="Chemistry" disabled>Chemistry</option>
                  <option value="German" disabled>German</option>
                  <option value="English" disabled>English</option>
                  <option value="History" disabled>History</option>
                  <option value="Italian" disabled>Italian</option>
                  <option value="Social Studies">Social Studies</option>
                  <!-- <option value="Mathematics">Mathematics</option> -->
                  <% } else if (language==='de' ) { %>
                    <option value="<%= subject %>" <% if (subject !=='' ) { %>selected<% } %>><%= subject !=='' ?
                          subject : 'Schulfach' %>
                          <img src=".\arrow-down.svg">
                    </option>
                    <option value="Biologie" disabled>Biologie</option>
                    <option value="Chemie" disabled>Chemie</option>
                    <option value="Deutsch" disabled>Deutsch</option>
                    <option value="Englisch" disabled>Englisch</option>
                    <option value="Gemeinschaftskunde">Gemeinschaftskunde</option>
                    <option value="Geschichte" disabled>Geschichte</option>
                    <option value="Italienisch" disabled>Italienisch</option>
                    <!-- <option value="Mathematik">Mathematik</option> -->
                    <% } %>
            </select>
            <input type="text" maxlength="64" id="topic" name="topic" autocomplete="off"
              placeholder="<%= language === 'de' ? 'Thema' : 'Topic' %>" required <% if (topic !=='' ) { %>disabled<% }
              %>
              value="<%= topic !=='' ? topic : '' %>">
                <button type="submit" id="topicButton" class="button">
                  <%= topic !=='' ? (language==='de' ? 'Neu' : 'New' ) : (language==='de' ? "Los geht's" : "Let's Go" )
                    %>
                </button>
                <button type="submit" class="toggle-history-button">
                  <img src="book-icon.svg" alt="history">
                </button>
          </form>
          <div class="chatLog" id="chatLog">
            <% if (chatLog.length> 0) { %>
              <% let firstUserEntrySkipped=false; %>
                <% chatLog.forEach(entry=> { %>
                  <% if (entry.role==='user' && !firstUserEntrySkipped) { %>
                    <% firstUserEntrySkipped=true; %>
                      <% } else if (entry.role==='user' ) { %>
                        <p class="input"><%= entry.content %></p>
                        <% } else if (entry.role !=='system' ) { %>
                          <p class="answer"><%= entry.content %></p>
                        <% } %>
                          <% }); %>
                            <% } %>
          </div>

          <form id="chatForm" action="/chat" method="POST">
            <textarea maxlength="512" id="input" name="input" autocomplete="off"
              placeholder="<%= language === 'de' ? 'Frag mich hier...' : 'Ask me here...' %>" required <% if (topic===''
              ) { %>disabled<% } %>></textarea>
            <button type="submit" id="chatButton" class="button" <% if (topic==='' ) { %>disabled<% } %>>
                <img src="send-icon.svg" alt="Send">
            </button>
          </form>
        </div>
      </div>
      <%- include("./partials/footer.ejs") %>
  </body>
  <script>
    window.onload = function () {
      document.getElementById('input').focus();
      const chatLog = document.getElementById('chatLog');
      chatLog.scrollTop = chatLog.scrollHeight;
    };

    document.getElementById("input").addEventListener("keydown", function (event) {
      if (event.which === 13 && !event.shiftKey) {
        if (!event.repeat) {
          const newEvent = new Event("submit", { cancelable: true });
          event.target.form.dispatchEvent(newEvent);
        }
        event.preventDefault(); // Prevents the addition of a new line in the text field
      }
    });

    const topicInput = document.getElementById('topicForm');
    const chatInput = document.getElementById('chatForm');
    topicInput.addEventListener('submit', function (event) {
      handleSubmit(this);
    });

    const eventSource = new EventSource('/chat/sse');
    let answerElement = null;

    eventSource.onmessage = (event) => {
      const message = JSON.parse(event.data);
      if (message.type === 'input') {
        const inputElement = document.createElement('p');
        inputElement.classList.add('input');
        inputElement.textContent = message.content;
        chatLog.appendChild(inputElement);
      } else if (message.type === 'answer') {
        if (!answerElement) {
          answerElement = document.createElement('p');
          answerElement.classList.add('answer');
          answerElement.textContent = message.content;
        } else {
          answerElement.textContent += ' ' + message.content;
        }

        chatLog.appendChild(answerElement);
      }

      chatLog.scrollTop = chatLog.scrollHeight;
    };


    chatInput.addEventListener('submit', function (event) {
      handleSubmit(this);
      const chatLog = document.getElementById('chatLog');
      chatLog.scrollTop = chatLog.scrollHeight;
    });

    function handleSubmit(form) {
      event.preventDefault();
      const textarea = document.getElementById('input');
      textarea.classList.add('textarea-animation');
      form.submit();
      disableFormElements(form);
    }

    function disableFormElements(form) {
      const elements = form.elements;
      for (let i = 0; i < elements.length; i++) {
        elements[i].disabled = true;
      }
    }

    // Get all buttons with the class 'session-button'
    const sessionButtons = document.querySelectorAll('.session-button');

    sessionButtons.forEach(button => {
      button.addEventListener('click', async () => {
        disableFormElements(topicInput);
        disableFormElements(chatInput);
        const sessionID = button.getAttribute('dataSessionId');
        try {
          const res = await fetch('/chat/lookup', {
            method: 'POST',
            body: JSON.stringify({ sessionID }), // Pass sessionID to the server
            headers: { 'Content-Type': 'application/json' }
          });
          const data = await res.json();
          if (data.session) {
            location.assign('/chat');
          } else {
            console.error(`Couldn't find chat`);
          }
        } catch (err) {
          console.error('An error occurred:', err);
        }
      });
    });

    // Add event listener to delete buttons
    const deleteButtons = document.querySelectorAll('.delete-button');

    deleteButtons.forEach(button => {
      button.addEventListener('click', () => {
        const tempSession = button.getAttribute('dataSessionId'); // Define tempSession here

        const deleteIcon = button.querySelector('#deleteButton');
        const okIcon = button.querySelector('#okButton');

        deleteIcon.style.display = 'none';
        okIcon.style.display = 'inline-block';

        // Add event listener to ok buttons inside this block
        const okButtons = document.querySelectorAll('#okButton');
        okButtons.forEach(okButton => {
          okButton.addEventListener('click', async () => {
            const textarea = document.getElementById('input');
            textarea.classList.remove('textarea-animation');
            disableFormElements(topicInput);
            disableFormElements(chatInput);
            try {
              const res = await fetch('/chat/delete', {
                method: 'POST',
                body: JSON.stringify({ sessionID: tempSession }), // Use tempSession here
                headers: { 'Content-Type': 'application/json' }
              });
              const data = await res.json();
              location.assign('/');
            } catch (err) {
              console.error('An error occurred:', err);
            }
          });
        });
      });
    });

    // Get the button elements
    const toggleHistoryButton = document.querySelector(".toggle-history-button");
    const toggleChatButton = document.querySelector(".toggle-chat-button");
    const chatHistory = document.querySelector(".chatHistory");
    const chatContainer = document.querySelector(".chatContainer");

    // Add event listeners to the buttons
    toggleHistoryButton.addEventListener("click", toggle);
    toggleChatButton.addEventListener("click", toggle);

    function toggle(event) {
      event.preventDefault(); // Prevent the default behavior
      chatHistory.classList.toggle("toggle-history");
      chatContainer.classList.toggle("toggle-chat");
    }


  </script>

</html>
